// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: roll/Rs7Updated.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Events.Integration.Protobuf.Roll {

  /// <summary>Holder for reflection information generated from roll/Rs7Updated.proto</summary>
  public static partial class Rs7UpdatedReflection {

    #region Descriptor
    /// <summary>File descriptor for roll/Rs7Updated.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static Rs7UpdatedReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChVyb2xsL1JzN1VwZGF0ZWQucHJvdG8aFnByb3RvYnVmLW5ldC9iY2wucHJv",
            "dG8aH3NoYXJlZC9GdW5kaW5nUGVyaW9kTW9udGgucHJvdG8aH2dvb2dsZS9w",
            "cm90b2J1Zi90aW1lc3RhbXAucHJvdG8ixQMKClJzN1VwZGF0ZWQSCgoCSWQY",
            "ASABKAUSIwoQQnVzaW5lc3NFbnRpdHlJZBgCIAEoCzIJLmJjbC5HdWlkEhYK",
            "Dk9yZ2FuaXNhdGlvbklkGAMgASgFEioKDUZ1bmRpbmdQZXJpb2QYBCABKA4y",
            "Ey5GdW5kaW5nUGVyaW9kTW9udGgSEwoLRnVuZGluZ1llYXIYBSABKAUSFgoO",
            "UmV2aXNpb25OdW1iZXIYBiABKAUSGQoRRnVuZGluZ1BlcmlvZFllYXIYByAB",
            "KAUSHwoKUm9sbFN0YXR1cxgIIAEoDjILLlJvbGxTdGF0dXMSMAoMUmV2aXNp",
            "b25EYXRlGAkgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBInCg1B",
            "ZHZhbmNlTW9udGhzGAogAygLMhAuUnM3QWR2YW5jZU1vbnRoEi8KEUVudGl0",
            "bGVtZW50TW9udGhzGAsgAygLMhQuUnM3RW50aXRsZW1lbnRNb250aBISCgpJ",
            "c0F0dGVzdGVkGAwgASgIEiYKC0RlY2xhcmF0aW9uGA0gASgLMhEuRGVjbGFy",
            "YXRpb25Nb2RlbBIRCglSZXF1ZXN0SWQYDiABKAkimAEKD1JzN0FkdmFuY2VN",
            "b250aBIKCgJJZBgBIAEoBRITCgtNb250aE51bWJlchgCIAEoBRIMCgRZZWFy",
            "GAMgASgFEg4KBkFsbERheRgEIAEoBRIRCglTZXNzaW9uYWwYBSABKAUSEQoJ",
            "UGFyZW50TGVkGAYgASgFEiAKBERheXMYByADKAsyEi5SczdFbnRpdGxlbWVu",
            "dERheSJEChNSczdFbnRpdGxlbWVudE1vbnRoEgoKAklkGAEgASgFEhMKC01v",
            "bnRoTnVtYmVyGAIgASgFEgwKBFllYXIYAyABKAUibAoQRGVjbGFyYXRpb25N",
            "b2RlbBIKCgJJZBgBIAEoBRIQCghGdWxsTmFtZRgCIAEoCRIUCgxDb250YWN0",
            "UGhvbmUYAyABKAkSDAoEUm9sZRgEIAEoCRIWCg5Jc0RlY2xhcmVkVHJ1ZRgF",
            "IAEoCCKVAQoRUnM3RW50aXRsZW1lbnREYXkSEQoJRGF5TnVtYmVyGAEgASgF",
            "Eg4KBlVuZGVyMhgCIAEoBRINCgVPdmVyMRgDIAEoBRIPCgdIb3VyczIwGAQg",
            "ASgFEg4KBlBsdXMxMBgFIAEoBRIUCgxDZXJ0aWZpY2F0ZWQYBiABKAUSFwoP",
            "Tm9uQ2VydGlmaWNhdGVkGAcgASgFKqEBCgpSb2xsU3RhdHVzEg8KC0V4dGVy",
            "bmFsTmV3EAASEQoNRXh0ZXJuYWxEcmFmdBABEhoKFkludGVybmFsUmVhZHlG",
            "b3JSZXZpZXcQAhIUChBJbnRlcm5hbEFwcHJvdmVkEAMSIAocRXh0ZXJuYWxT",
            "dWJtaXR0ZWRGb3JBcHByb3ZhbBAEEhsKF0V4dGVybmFsUmV0dXJuZWRGb3JF",
            "ZGl0EAVCI6oCIEV2ZW50cy5JbnRlZ3JhdGlvbi5Qcm90b2J1Zi5Sb2xsYgZw",
            "cm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::ProtoBuf.Bcl.BclReflection.Descriptor, global::Events.Integration.Protobuf.Shared.FundingPeriodMonthReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Events.Integration.Protobuf.Roll.RollStatus), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Events.Integration.Protobuf.Roll.Rs7Updated), global::Events.Integration.Protobuf.Roll.Rs7Updated.Parser, new[]{ "Id", "BusinessEntityId", "OrganisationId", "FundingPeriod", "FundingYear", "RevisionNumber", "FundingPeriodYear", "RollStatus", "RevisionDate", "AdvanceMonths", "EntitlementMonths", "IsAttested", "Declaration", "RequestId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Events.Integration.Protobuf.Roll.Rs7AdvanceMonth), global::Events.Integration.Protobuf.Roll.Rs7AdvanceMonth.Parser, new[]{ "Id", "MonthNumber", "Year", "AllDay", "Sessional", "ParentLed", "Days" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Events.Integration.Protobuf.Roll.Rs7EntitlementMonth), global::Events.Integration.Protobuf.Roll.Rs7EntitlementMonth.Parser, new[]{ "Id", "MonthNumber", "Year" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Events.Integration.Protobuf.Roll.DeclarationModel), global::Events.Integration.Protobuf.Roll.DeclarationModel.Parser, new[]{ "Id", "FullName", "ContactPhone", "Role", "IsDeclaredTrue" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Events.Integration.Protobuf.Roll.Rs7EntitlementDay), global::Events.Integration.Protobuf.Roll.Rs7EntitlementDay.Parser, new[]{ "DayNumber", "Under2", "Over1", "Hours20", "Plus10", "Certificated", "NonCertificated" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum RollStatus {
    [pbr::OriginalName("ExternalNew")] ExternalNew = 0,
    [pbr::OriginalName("ExternalDraft")] ExternalDraft = 1,
    [pbr::OriginalName("InternalReadyForReview")] InternalReadyForReview = 2,
    [pbr::OriginalName("InternalApproved")] InternalApproved = 3,
    [pbr::OriginalName("ExternalSubmittedForApproval")] ExternalSubmittedForApproval = 4,
    [pbr::OriginalName("ExternalReturnedForEdit")] ExternalReturnedForEdit = 5,
  }

  #endregion

  #region Messages
  /// <summary>
  ///Roll.Rs7Updated
  /// </summary>
  public sealed partial class Rs7Updated : pb::IMessage<Rs7Updated>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Rs7Updated> _parser = new pb::MessageParser<Rs7Updated>(() => new Rs7Updated());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Rs7Updated> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Events.Integration.Protobuf.Roll.Rs7UpdatedReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Rs7Updated() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Rs7Updated(Rs7Updated other) : this() {
      id_ = other.id_;
      businessEntityId_ = other.businessEntityId_ != null ? other.businessEntityId_.Clone() : null;
      organisationId_ = other.organisationId_;
      fundingPeriod_ = other.fundingPeriod_;
      fundingYear_ = other.fundingYear_;
      revisionNumber_ = other.revisionNumber_;
      fundingPeriodYear_ = other.fundingPeriodYear_;
      rollStatus_ = other.rollStatus_;
      revisionDate_ = other.revisionDate_ != null ? other.revisionDate_.Clone() : null;
      advanceMonths_ = other.advanceMonths_.Clone();
      entitlementMonths_ = other.entitlementMonths_.Clone();
      isAttested_ = other.isAttested_;
      declaration_ = other.declaration_ != null ? other.declaration_.Clone() : null;
      requestId_ = other.requestId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Rs7Updated Clone() {
      return new Rs7Updated(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "BusinessEntityId" field.</summary>
    public const int BusinessEntityIdFieldNumber = 2;
    private global::ProtoBuf.Bcl.Guid businessEntityId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoBuf.Bcl.Guid BusinessEntityId {
      get { return businessEntityId_; }
      set {
        businessEntityId_ = value;
      }
    }

    /// <summary>Field number for the "OrganisationId" field.</summary>
    public const int OrganisationIdFieldNumber = 3;
    private int organisationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int OrganisationId {
      get { return organisationId_; }
      set {
        organisationId_ = value;
      }
    }

    /// <summary>Field number for the "FundingPeriod" field.</summary>
    public const int FundingPeriodFieldNumber = 4;
    private global::Events.Integration.Protobuf.Shared.FundingPeriodMonth fundingPeriod_ = global::Events.Integration.Protobuf.Shared.FundingPeriodMonth.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Events.Integration.Protobuf.Shared.FundingPeriodMonth FundingPeriod {
      get { return fundingPeriod_; }
      set {
        fundingPeriod_ = value;
      }
    }

    /// <summary>Field number for the "FundingYear" field.</summary>
    public const int FundingYearFieldNumber = 5;
    private int fundingYear_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FundingYear {
      get { return fundingYear_; }
      set {
        fundingYear_ = value;
      }
    }

    /// <summary>Field number for the "RevisionNumber" field.</summary>
    public const int RevisionNumberFieldNumber = 6;
    private int revisionNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RevisionNumber {
      get { return revisionNumber_; }
      set {
        revisionNumber_ = value;
      }
    }

    /// <summary>Field number for the "FundingPeriodYear" field.</summary>
    public const int FundingPeriodYearFieldNumber = 7;
    private int fundingPeriodYear_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FundingPeriodYear {
      get { return fundingPeriodYear_; }
      set {
        fundingPeriodYear_ = value;
      }
    }

    /// <summary>Field number for the "RollStatus" field.</summary>
    public const int RollStatusFieldNumber = 8;
    private global::Events.Integration.Protobuf.Roll.RollStatus rollStatus_ = global::Events.Integration.Protobuf.Roll.RollStatus.ExternalNew;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Events.Integration.Protobuf.Roll.RollStatus RollStatus {
      get { return rollStatus_; }
      set {
        rollStatus_ = value;
      }
    }

    /// <summary>Field number for the "RevisionDate" field.</summary>
    public const int RevisionDateFieldNumber = 9;
    private global::Google.Protobuf.WellKnownTypes.Timestamp revisionDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp RevisionDate {
      get { return revisionDate_; }
      set {
        revisionDate_ = value;
      }
    }

    /// <summary>Field number for the "AdvanceMonths" field.</summary>
    public const int AdvanceMonthsFieldNumber = 10;
    private static readonly pb::FieldCodec<global::Events.Integration.Protobuf.Roll.Rs7AdvanceMonth> _repeated_advanceMonths_codec
        = pb::FieldCodec.ForMessage(82, global::Events.Integration.Protobuf.Roll.Rs7AdvanceMonth.Parser);
    private readonly pbc::RepeatedField<global::Events.Integration.Protobuf.Roll.Rs7AdvanceMonth> advanceMonths_ = new pbc::RepeatedField<global::Events.Integration.Protobuf.Roll.Rs7AdvanceMonth>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Events.Integration.Protobuf.Roll.Rs7AdvanceMonth> AdvanceMonths {
      get { return advanceMonths_; }
    }

    /// <summary>Field number for the "EntitlementMonths" field.</summary>
    public const int EntitlementMonthsFieldNumber = 11;
    private static readonly pb::FieldCodec<global::Events.Integration.Protobuf.Roll.Rs7EntitlementMonth> _repeated_entitlementMonths_codec
        = pb::FieldCodec.ForMessage(90, global::Events.Integration.Protobuf.Roll.Rs7EntitlementMonth.Parser);
    private readonly pbc::RepeatedField<global::Events.Integration.Protobuf.Roll.Rs7EntitlementMonth> entitlementMonths_ = new pbc::RepeatedField<global::Events.Integration.Protobuf.Roll.Rs7EntitlementMonth>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Events.Integration.Protobuf.Roll.Rs7EntitlementMonth> EntitlementMonths {
      get { return entitlementMonths_; }
    }

    /// <summary>Field number for the "IsAttested" field.</summary>
    public const int IsAttestedFieldNumber = 12;
    private bool isAttested_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsAttested {
      get { return isAttested_; }
      set {
        isAttested_ = value;
      }
    }

    /// <summary>Field number for the "Declaration" field.</summary>
    public const int DeclarationFieldNumber = 13;
    private global::Events.Integration.Protobuf.Roll.DeclarationModel declaration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Events.Integration.Protobuf.Roll.DeclarationModel Declaration {
      get { return declaration_; }
      set {
        declaration_ = value;
      }
    }

    /// <summary>Field number for the "RequestId" field.</summary>
    public const int RequestIdFieldNumber = 14;
    private string requestId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RequestId {
      get { return requestId_; }
      set {
        requestId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Rs7Updated);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Rs7Updated other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (!object.Equals(BusinessEntityId, other.BusinessEntityId)) return false;
      if (OrganisationId != other.OrganisationId) return false;
      if (FundingPeriod != other.FundingPeriod) return false;
      if (FundingYear != other.FundingYear) return false;
      if (RevisionNumber != other.RevisionNumber) return false;
      if (FundingPeriodYear != other.FundingPeriodYear) return false;
      if (RollStatus != other.RollStatus) return false;
      if (!object.Equals(RevisionDate, other.RevisionDate)) return false;
      if(!advanceMonths_.Equals(other.advanceMonths_)) return false;
      if(!entitlementMonths_.Equals(other.entitlementMonths_)) return false;
      if (IsAttested != other.IsAttested) return false;
      if (!object.Equals(Declaration, other.Declaration)) return false;
      if (RequestId != other.RequestId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (businessEntityId_ != null) hash ^= BusinessEntityId.GetHashCode();
      if (OrganisationId != 0) hash ^= OrganisationId.GetHashCode();
      if (FundingPeriod != global::Events.Integration.Protobuf.Shared.FundingPeriodMonth.Unspecified) hash ^= FundingPeriod.GetHashCode();
      if (FundingYear != 0) hash ^= FundingYear.GetHashCode();
      if (RevisionNumber != 0) hash ^= RevisionNumber.GetHashCode();
      if (FundingPeriodYear != 0) hash ^= FundingPeriodYear.GetHashCode();
      if (RollStatus != global::Events.Integration.Protobuf.Roll.RollStatus.ExternalNew) hash ^= RollStatus.GetHashCode();
      if (revisionDate_ != null) hash ^= RevisionDate.GetHashCode();
      hash ^= advanceMonths_.GetHashCode();
      hash ^= entitlementMonths_.GetHashCode();
      if (IsAttested != false) hash ^= IsAttested.GetHashCode();
      if (declaration_ != null) hash ^= Declaration.GetHashCode();
      if (RequestId.Length != 0) hash ^= RequestId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (businessEntityId_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(BusinessEntityId);
      }
      if (OrganisationId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(OrganisationId);
      }
      if (FundingPeriod != global::Events.Integration.Protobuf.Shared.FundingPeriodMonth.Unspecified) {
        output.WriteRawTag(32);
        output.WriteEnum((int) FundingPeriod);
      }
      if (FundingYear != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(FundingYear);
      }
      if (RevisionNumber != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(RevisionNumber);
      }
      if (FundingPeriodYear != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(FundingPeriodYear);
      }
      if (RollStatus != global::Events.Integration.Protobuf.Roll.RollStatus.ExternalNew) {
        output.WriteRawTag(64);
        output.WriteEnum((int) RollStatus);
      }
      if (revisionDate_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(RevisionDate);
      }
      advanceMonths_.WriteTo(output, _repeated_advanceMonths_codec);
      entitlementMonths_.WriteTo(output, _repeated_entitlementMonths_codec);
      if (IsAttested != false) {
        output.WriteRawTag(96);
        output.WriteBool(IsAttested);
      }
      if (declaration_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(Declaration);
      }
      if (RequestId.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(RequestId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (businessEntityId_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(BusinessEntityId);
      }
      if (OrganisationId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(OrganisationId);
      }
      if (FundingPeriod != global::Events.Integration.Protobuf.Shared.FundingPeriodMonth.Unspecified) {
        output.WriteRawTag(32);
        output.WriteEnum((int) FundingPeriod);
      }
      if (FundingYear != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(FundingYear);
      }
      if (RevisionNumber != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(RevisionNumber);
      }
      if (FundingPeriodYear != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(FundingPeriodYear);
      }
      if (RollStatus != global::Events.Integration.Protobuf.Roll.RollStatus.ExternalNew) {
        output.WriteRawTag(64);
        output.WriteEnum((int) RollStatus);
      }
      if (revisionDate_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(RevisionDate);
      }
      advanceMonths_.WriteTo(ref output, _repeated_advanceMonths_codec);
      entitlementMonths_.WriteTo(ref output, _repeated_entitlementMonths_codec);
      if (IsAttested != false) {
        output.WriteRawTag(96);
        output.WriteBool(IsAttested);
      }
      if (declaration_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(Declaration);
      }
      if (RequestId.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(RequestId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (businessEntityId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BusinessEntityId);
      }
      if (OrganisationId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OrganisationId);
      }
      if (FundingPeriod != global::Events.Integration.Protobuf.Shared.FundingPeriodMonth.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) FundingPeriod);
      }
      if (FundingYear != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FundingYear);
      }
      if (RevisionNumber != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RevisionNumber);
      }
      if (FundingPeriodYear != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FundingPeriodYear);
      }
      if (RollStatus != global::Events.Integration.Protobuf.Roll.RollStatus.ExternalNew) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RollStatus);
      }
      if (revisionDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RevisionDate);
      }
      size += advanceMonths_.CalculateSize(_repeated_advanceMonths_codec);
      size += entitlementMonths_.CalculateSize(_repeated_entitlementMonths_codec);
      if (IsAttested != false) {
        size += 1 + 1;
      }
      if (declaration_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Declaration);
      }
      if (RequestId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RequestId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Rs7Updated other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.businessEntityId_ != null) {
        if (businessEntityId_ == null) {
          BusinessEntityId = new global::ProtoBuf.Bcl.Guid();
        }
        BusinessEntityId.MergeFrom(other.BusinessEntityId);
      }
      if (other.OrganisationId != 0) {
        OrganisationId = other.OrganisationId;
      }
      if (other.FundingPeriod != global::Events.Integration.Protobuf.Shared.FundingPeriodMonth.Unspecified) {
        FundingPeriod = other.FundingPeriod;
      }
      if (other.FundingYear != 0) {
        FundingYear = other.FundingYear;
      }
      if (other.RevisionNumber != 0) {
        RevisionNumber = other.RevisionNumber;
      }
      if (other.FundingPeriodYear != 0) {
        FundingPeriodYear = other.FundingPeriodYear;
      }
      if (other.RollStatus != global::Events.Integration.Protobuf.Roll.RollStatus.ExternalNew) {
        RollStatus = other.RollStatus;
      }
      if (other.revisionDate_ != null) {
        if (revisionDate_ == null) {
          RevisionDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        RevisionDate.MergeFrom(other.RevisionDate);
      }
      advanceMonths_.Add(other.advanceMonths_);
      entitlementMonths_.Add(other.entitlementMonths_);
      if (other.IsAttested != false) {
        IsAttested = other.IsAttested;
      }
      if (other.declaration_ != null) {
        if (declaration_ == null) {
          Declaration = new global::Events.Integration.Protobuf.Roll.DeclarationModel();
        }
        Declaration.MergeFrom(other.Declaration);
      }
      if (other.RequestId.Length != 0) {
        RequestId = other.RequestId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            if (businessEntityId_ == null) {
              BusinessEntityId = new global::ProtoBuf.Bcl.Guid();
            }
            input.ReadMessage(BusinessEntityId);
            break;
          }
          case 24: {
            OrganisationId = input.ReadInt32();
            break;
          }
          case 32: {
            FundingPeriod = (global::Events.Integration.Protobuf.Shared.FundingPeriodMonth) input.ReadEnum();
            break;
          }
          case 40: {
            FundingYear = input.ReadInt32();
            break;
          }
          case 48: {
            RevisionNumber = input.ReadInt32();
            break;
          }
          case 56: {
            FundingPeriodYear = input.ReadInt32();
            break;
          }
          case 64: {
            RollStatus = (global::Events.Integration.Protobuf.Roll.RollStatus) input.ReadEnum();
            break;
          }
          case 74: {
            if (revisionDate_ == null) {
              RevisionDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(RevisionDate);
            break;
          }
          case 82: {
            advanceMonths_.AddEntriesFrom(input, _repeated_advanceMonths_codec);
            break;
          }
          case 90: {
            entitlementMonths_.AddEntriesFrom(input, _repeated_entitlementMonths_codec);
            break;
          }
          case 96: {
            IsAttested = input.ReadBool();
            break;
          }
          case 106: {
            if (declaration_ == null) {
              Declaration = new global::Events.Integration.Protobuf.Roll.DeclarationModel();
            }
            input.ReadMessage(Declaration);
            break;
          }
          case 114: {
            RequestId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            if (businessEntityId_ == null) {
              BusinessEntityId = new global::ProtoBuf.Bcl.Guid();
            }
            input.ReadMessage(BusinessEntityId);
            break;
          }
          case 24: {
            OrganisationId = input.ReadInt32();
            break;
          }
          case 32: {
            FundingPeriod = (global::Events.Integration.Protobuf.Shared.FundingPeriodMonth) input.ReadEnum();
            break;
          }
          case 40: {
            FundingYear = input.ReadInt32();
            break;
          }
          case 48: {
            RevisionNumber = input.ReadInt32();
            break;
          }
          case 56: {
            FundingPeriodYear = input.ReadInt32();
            break;
          }
          case 64: {
            RollStatus = (global::Events.Integration.Protobuf.Roll.RollStatus) input.ReadEnum();
            break;
          }
          case 74: {
            if (revisionDate_ == null) {
              RevisionDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(RevisionDate);
            break;
          }
          case 82: {
            advanceMonths_.AddEntriesFrom(ref input, _repeated_advanceMonths_codec);
            break;
          }
          case 90: {
            entitlementMonths_.AddEntriesFrom(ref input, _repeated_entitlementMonths_codec);
            break;
          }
          case 96: {
            IsAttested = input.ReadBool();
            break;
          }
          case 106: {
            if (declaration_ == null) {
              Declaration = new global::Events.Integration.Protobuf.Roll.DeclarationModel();
            }
            input.ReadMessage(Declaration);
            break;
          }
          case 114: {
            RequestId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Rs7AdvanceMonth : pb::IMessage<Rs7AdvanceMonth>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Rs7AdvanceMonth> _parser = new pb::MessageParser<Rs7AdvanceMonth>(() => new Rs7AdvanceMonth());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Rs7AdvanceMonth> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Events.Integration.Protobuf.Roll.Rs7UpdatedReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Rs7AdvanceMonth() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Rs7AdvanceMonth(Rs7AdvanceMonth other) : this() {
      id_ = other.id_;
      monthNumber_ = other.monthNumber_;
      year_ = other.year_;
      allDay_ = other.allDay_;
      sessional_ = other.sessional_;
      parentLed_ = other.parentLed_;
      days_ = other.days_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Rs7AdvanceMonth Clone() {
      return new Rs7AdvanceMonth(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "MonthNumber" field.</summary>
    public const int MonthNumberFieldNumber = 2;
    private int monthNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MonthNumber {
      get { return monthNumber_; }
      set {
        monthNumber_ = value;
      }
    }

    /// <summary>Field number for the "Year" field.</summary>
    public const int YearFieldNumber = 3;
    private int year_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Year {
      get { return year_; }
      set {
        year_ = value;
      }
    }

    /// <summary>Field number for the "AllDay" field.</summary>
    public const int AllDayFieldNumber = 4;
    private int allDay_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AllDay {
      get { return allDay_; }
      set {
        allDay_ = value;
      }
    }

    /// <summary>Field number for the "Sessional" field.</summary>
    public const int SessionalFieldNumber = 5;
    private int sessional_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Sessional {
      get { return sessional_; }
      set {
        sessional_ = value;
      }
    }

    /// <summary>Field number for the "ParentLed" field.</summary>
    public const int ParentLedFieldNumber = 6;
    private int parentLed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ParentLed {
      get { return parentLed_; }
      set {
        parentLed_ = value;
      }
    }

    /// <summary>Field number for the "Days" field.</summary>
    public const int DaysFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Events.Integration.Protobuf.Roll.Rs7EntitlementDay> _repeated_days_codec
        = pb::FieldCodec.ForMessage(58, global::Events.Integration.Protobuf.Roll.Rs7EntitlementDay.Parser);
    private readonly pbc::RepeatedField<global::Events.Integration.Protobuf.Roll.Rs7EntitlementDay> days_ = new pbc::RepeatedField<global::Events.Integration.Protobuf.Roll.Rs7EntitlementDay>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Events.Integration.Protobuf.Roll.Rs7EntitlementDay> Days {
      get { return days_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Rs7AdvanceMonth);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Rs7AdvanceMonth other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (MonthNumber != other.MonthNumber) return false;
      if (Year != other.Year) return false;
      if (AllDay != other.AllDay) return false;
      if (Sessional != other.Sessional) return false;
      if (ParentLed != other.ParentLed) return false;
      if(!days_.Equals(other.days_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (MonthNumber != 0) hash ^= MonthNumber.GetHashCode();
      if (Year != 0) hash ^= Year.GetHashCode();
      if (AllDay != 0) hash ^= AllDay.GetHashCode();
      if (Sessional != 0) hash ^= Sessional.GetHashCode();
      if (ParentLed != 0) hash ^= ParentLed.GetHashCode();
      hash ^= days_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (MonthNumber != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MonthNumber);
      }
      if (Year != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Year);
      }
      if (AllDay != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(AllDay);
      }
      if (Sessional != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Sessional);
      }
      if (ParentLed != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(ParentLed);
      }
      days_.WriteTo(output, _repeated_days_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (MonthNumber != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MonthNumber);
      }
      if (Year != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Year);
      }
      if (AllDay != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(AllDay);
      }
      if (Sessional != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Sessional);
      }
      if (ParentLed != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(ParentLed);
      }
      days_.WriteTo(ref output, _repeated_days_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (MonthNumber != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MonthNumber);
      }
      if (Year != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Year);
      }
      if (AllDay != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AllDay);
      }
      if (Sessional != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Sessional);
      }
      if (ParentLed != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ParentLed);
      }
      size += days_.CalculateSize(_repeated_days_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Rs7AdvanceMonth other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.MonthNumber != 0) {
        MonthNumber = other.MonthNumber;
      }
      if (other.Year != 0) {
        Year = other.Year;
      }
      if (other.AllDay != 0) {
        AllDay = other.AllDay;
      }
      if (other.Sessional != 0) {
        Sessional = other.Sessional;
      }
      if (other.ParentLed != 0) {
        ParentLed = other.ParentLed;
      }
      days_.Add(other.days_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            MonthNumber = input.ReadInt32();
            break;
          }
          case 24: {
            Year = input.ReadInt32();
            break;
          }
          case 32: {
            AllDay = input.ReadInt32();
            break;
          }
          case 40: {
            Sessional = input.ReadInt32();
            break;
          }
          case 48: {
            ParentLed = input.ReadInt32();
            break;
          }
          case 58: {
            days_.AddEntriesFrom(input, _repeated_days_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            MonthNumber = input.ReadInt32();
            break;
          }
          case 24: {
            Year = input.ReadInt32();
            break;
          }
          case 32: {
            AllDay = input.ReadInt32();
            break;
          }
          case 40: {
            Sessional = input.ReadInt32();
            break;
          }
          case 48: {
            ParentLed = input.ReadInt32();
            break;
          }
          case 58: {
            days_.AddEntriesFrom(ref input, _repeated_days_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Rs7EntitlementMonth : pb::IMessage<Rs7EntitlementMonth>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Rs7EntitlementMonth> _parser = new pb::MessageParser<Rs7EntitlementMonth>(() => new Rs7EntitlementMonth());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Rs7EntitlementMonth> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Events.Integration.Protobuf.Roll.Rs7UpdatedReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Rs7EntitlementMonth() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Rs7EntitlementMonth(Rs7EntitlementMonth other) : this() {
      id_ = other.id_;
      monthNumber_ = other.monthNumber_;
      year_ = other.year_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Rs7EntitlementMonth Clone() {
      return new Rs7EntitlementMonth(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "MonthNumber" field.</summary>
    public const int MonthNumberFieldNumber = 2;
    private int monthNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MonthNumber {
      get { return monthNumber_; }
      set {
        monthNumber_ = value;
      }
    }

    /// <summary>Field number for the "Year" field.</summary>
    public const int YearFieldNumber = 3;
    private int year_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Year {
      get { return year_; }
      set {
        year_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Rs7EntitlementMonth);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Rs7EntitlementMonth other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (MonthNumber != other.MonthNumber) return false;
      if (Year != other.Year) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (MonthNumber != 0) hash ^= MonthNumber.GetHashCode();
      if (Year != 0) hash ^= Year.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (MonthNumber != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MonthNumber);
      }
      if (Year != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Year);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (MonthNumber != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MonthNumber);
      }
      if (Year != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Year);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (MonthNumber != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MonthNumber);
      }
      if (Year != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Year);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Rs7EntitlementMonth other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.MonthNumber != 0) {
        MonthNumber = other.MonthNumber;
      }
      if (other.Year != 0) {
        Year = other.Year;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            MonthNumber = input.ReadInt32();
            break;
          }
          case 24: {
            Year = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            MonthNumber = input.ReadInt32();
            break;
          }
          case 24: {
            Year = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DeclarationModel : pb::IMessage<DeclarationModel>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeclarationModel> _parser = new pb::MessageParser<DeclarationModel>(() => new DeclarationModel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeclarationModel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Events.Integration.Protobuf.Roll.Rs7UpdatedReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeclarationModel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeclarationModel(DeclarationModel other) : this() {
      id_ = other.id_;
      fullName_ = other.fullName_;
      contactPhone_ = other.contactPhone_;
      role_ = other.role_;
      isDeclaredTrue_ = other.isDeclaredTrue_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeclarationModel Clone() {
      return new DeclarationModel(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "FullName" field.</summary>
    public const int FullNameFieldNumber = 2;
    private string fullName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FullName {
      get { return fullName_; }
      set {
        fullName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ContactPhone" field.</summary>
    public const int ContactPhoneFieldNumber = 3;
    private string contactPhone_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContactPhone {
      get { return contactPhone_; }
      set {
        contactPhone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Role" field.</summary>
    public const int RoleFieldNumber = 4;
    private string role_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Role {
      get { return role_; }
      set {
        role_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IsDeclaredTrue" field.</summary>
    public const int IsDeclaredTrueFieldNumber = 5;
    private bool isDeclaredTrue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsDeclaredTrue {
      get { return isDeclaredTrue_; }
      set {
        isDeclaredTrue_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeclarationModel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeclarationModel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (FullName != other.FullName) return false;
      if (ContactPhone != other.ContactPhone) return false;
      if (Role != other.Role) return false;
      if (IsDeclaredTrue != other.IsDeclaredTrue) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (FullName.Length != 0) hash ^= FullName.GetHashCode();
      if (ContactPhone.Length != 0) hash ^= ContactPhone.GetHashCode();
      if (Role.Length != 0) hash ^= Role.GetHashCode();
      if (IsDeclaredTrue != false) hash ^= IsDeclaredTrue.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (FullName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FullName);
      }
      if (ContactPhone.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ContactPhone);
      }
      if (Role.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Role);
      }
      if (IsDeclaredTrue != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsDeclaredTrue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (FullName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FullName);
      }
      if (ContactPhone.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ContactPhone);
      }
      if (Role.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Role);
      }
      if (IsDeclaredTrue != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsDeclaredTrue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (FullName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FullName);
      }
      if (ContactPhone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContactPhone);
      }
      if (Role.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Role);
      }
      if (IsDeclaredTrue != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeclarationModel other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.FullName.Length != 0) {
        FullName = other.FullName;
      }
      if (other.ContactPhone.Length != 0) {
        ContactPhone = other.ContactPhone;
      }
      if (other.Role.Length != 0) {
        Role = other.Role;
      }
      if (other.IsDeclaredTrue != false) {
        IsDeclaredTrue = other.IsDeclaredTrue;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            FullName = input.ReadString();
            break;
          }
          case 26: {
            ContactPhone = input.ReadString();
            break;
          }
          case 34: {
            Role = input.ReadString();
            break;
          }
          case 40: {
            IsDeclaredTrue = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            FullName = input.ReadString();
            break;
          }
          case 26: {
            ContactPhone = input.ReadString();
            break;
          }
          case 34: {
            Role = input.ReadString();
            break;
          }
          case 40: {
            IsDeclaredTrue = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Rs7EntitlementDay : pb::IMessage<Rs7EntitlementDay>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Rs7EntitlementDay> _parser = new pb::MessageParser<Rs7EntitlementDay>(() => new Rs7EntitlementDay());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Rs7EntitlementDay> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Events.Integration.Protobuf.Roll.Rs7UpdatedReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Rs7EntitlementDay() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Rs7EntitlementDay(Rs7EntitlementDay other) : this() {
      dayNumber_ = other.dayNumber_;
      under2_ = other.under2_;
      over1_ = other.over1_;
      hours20_ = other.hours20_;
      plus10_ = other.plus10_;
      certificated_ = other.certificated_;
      nonCertificated_ = other.nonCertificated_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Rs7EntitlementDay Clone() {
      return new Rs7EntitlementDay(this);
    }

    /// <summary>Field number for the "DayNumber" field.</summary>
    public const int DayNumberFieldNumber = 1;
    private int dayNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DayNumber {
      get { return dayNumber_; }
      set {
        dayNumber_ = value;
      }
    }

    /// <summary>Field number for the "Under2" field.</summary>
    public const int Under2FieldNumber = 2;
    private int under2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Under2 {
      get { return under2_; }
      set {
        under2_ = value;
      }
    }

    /// <summary>Field number for the "Over1" field.</summary>
    public const int Over1FieldNumber = 3;
    private int over1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Over1 {
      get { return over1_; }
      set {
        over1_ = value;
      }
    }

    /// <summary>Field number for the "Hours20" field.</summary>
    public const int Hours20FieldNumber = 4;
    private int hours20_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Hours20 {
      get { return hours20_; }
      set {
        hours20_ = value;
      }
    }

    /// <summary>Field number for the "Plus10" field.</summary>
    public const int Plus10FieldNumber = 5;
    private int plus10_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Plus10 {
      get { return plus10_; }
      set {
        plus10_ = value;
      }
    }

    /// <summary>Field number for the "Certificated" field.</summary>
    public const int CertificatedFieldNumber = 6;
    private int certificated_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Certificated {
      get { return certificated_; }
      set {
        certificated_ = value;
      }
    }

    /// <summary>Field number for the "NonCertificated" field.</summary>
    public const int NonCertificatedFieldNumber = 7;
    private int nonCertificated_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NonCertificated {
      get { return nonCertificated_; }
      set {
        nonCertificated_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Rs7EntitlementDay);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Rs7EntitlementDay other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DayNumber != other.DayNumber) return false;
      if (Under2 != other.Under2) return false;
      if (Over1 != other.Over1) return false;
      if (Hours20 != other.Hours20) return false;
      if (Plus10 != other.Plus10) return false;
      if (Certificated != other.Certificated) return false;
      if (NonCertificated != other.NonCertificated) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DayNumber != 0) hash ^= DayNumber.GetHashCode();
      if (Under2 != 0) hash ^= Under2.GetHashCode();
      if (Over1 != 0) hash ^= Over1.GetHashCode();
      if (Hours20 != 0) hash ^= Hours20.GetHashCode();
      if (Plus10 != 0) hash ^= Plus10.GetHashCode();
      if (Certificated != 0) hash ^= Certificated.GetHashCode();
      if (NonCertificated != 0) hash ^= NonCertificated.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (DayNumber != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(DayNumber);
      }
      if (Under2 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Under2);
      }
      if (Over1 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Over1);
      }
      if (Hours20 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Hours20);
      }
      if (Plus10 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Plus10);
      }
      if (Certificated != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Certificated);
      }
      if (NonCertificated != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(NonCertificated);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (DayNumber != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(DayNumber);
      }
      if (Under2 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Under2);
      }
      if (Over1 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Over1);
      }
      if (Hours20 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Hours20);
      }
      if (Plus10 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Plus10);
      }
      if (Certificated != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Certificated);
      }
      if (NonCertificated != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(NonCertificated);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DayNumber != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DayNumber);
      }
      if (Under2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Under2);
      }
      if (Over1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Over1);
      }
      if (Hours20 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Hours20);
      }
      if (Plus10 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Plus10);
      }
      if (Certificated != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Certificated);
      }
      if (NonCertificated != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NonCertificated);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Rs7EntitlementDay other) {
      if (other == null) {
        return;
      }
      if (other.DayNumber != 0) {
        DayNumber = other.DayNumber;
      }
      if (other.Under2 != 0) {
        Under2 = other.Under2;
      }
      if (other.Over1 != 0) {
        Over1 = other.Over1;
      }
      if (other.Hours20 != 0) {
        Hours20 = other.Hours20;
      }
      if (other.Plus10 != 0) {
        Plus10 = other.Plus10;
      }
      if (other.Certificated != 0) {
        Certificated = other.Certificated;
      }
      if (other.NonCertificated != 0) {
        NonCertificated = other.NonCertificated;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            DayNumber = input.ReadInt32();
            break;
          }
          case 16: {
            Under2 = input.ReadInt32();
            break;
          }
          case 24: {
            Over1 = input.ReadInt32();
            break;
          }
          case 32: {
            Hours20 = input.ReadInt32();
            break;
          }
          case 40: {
            Plus10 = input.ReadInt32();
            break;
          }
          case 48: {
            Certificated = input.ReadInt32();
            break;
          }
          case 56: {
            NonCertificated = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            DayNumber = input.ReadInt32();
            break;
          }
          case 16: {
            Under2 = input.ReadInt32();
            break;
          }
          case 24: {
            Over1 = input.ReadInt32();
            break;
          }
          case 32: {
            Hours20 = input.ReadInt32();
            break;
          }
          case 40: {
            Plus10 = input.ReadInt32();
            break;
          }
          case 48: {
            Certificated = input.ReadInt32();
            break;
          }
          case 56: {
            NonCertificated = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
