name: '$(versionMajor).$(versionMinor).$(versionPatch)$(Rev:.r)'

trigger:
- master

schedules:
  - cron: "0 16 * * *" # Schedule earlier than first/integration pipelines 
    displayName: Morning build
    branches:
      include:
      - master
    always: 'true'

pool:
  vmImage: "ubuntu-latest"

variables:
  versionMajor: 1
  versionMinor: 0
  versionPatch: 0

  containerRegistry: 'mapaerscontainerregistry'

resources:
  repositories:
    - repository: 'utilities' # repo for terraform, ado and other scripts and tools
      type: 'git'
      name: 'utilities'

    - repository: 'ece-api'
      type: 'git'
      name: 'ece-api'      

    - repository: 'release-management'
      type: 'git'
      name: 'release-management'

extends:
  template: approval-check.yml@release-management
  parameters:
    releaseStages:
    - template: quality-gate.yml
      parameters:
        azureDevOpsServiceConnection: '$(azureServiceConnectionTestDev)'
        azureKeyvaultInstance: 'mataersdev02secrets'

    - template: build-stage.yml    
      parameters:      
        azureDevOpsServiceConnection: '$(azureServiceConnectionTestDev)'
        azureKeyvaultInstance: 'mataersdev02secrets'

    - ${{ if ne(variables['Build.SourceBranch'], 'refs/heads/master') }}:
      - template: release-stage.yml
        parameters:
          environmentPrefix: 'mata'
          environmentSuffix: 'devtest'
          environmentName: 'dev'
          environmentNumber: '00'
          azureDevOpsServiceConnection: '$(azureServiceConnectionTestDev)'
          azureKeyvaultInstance: 'mataersdev00secrets'
          containerRegistry: '$(containerRegistry)'

    - ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/master') }}:
      - template: release-stage.yml
        parameters:
            environmentPrefix: 'mata'
            environmentSuffix: 'devtest'
            environmentName: 'dev'
            environmentNumber: '02'
            azureDevOpsServiceConnection: '$(azureServiceConnectionTestDev)'
            azureKeyvaultInstance: 'mataersdev02secrets'
            containerRegistry: '$(containerRegistry)'

      - template: release-stage.yml
        parameters:
            environmentPrefix: 'mata'
            environmentSuffix: 'devtest'
            environmentName: 'tst'
            environmentNumber: '02'
            azureDevOpsServiceConnection: '$(azureServiceConnectionTestDev)'
            azureKeyvaultInstance: 'mataerstst02secrets'
            containerRegistry: '$(containerRegistry)'

      - template: release-stage.yml
        parameters:
            environmentPrefix: 'mata'
            environmentSuffix: 'devtest'
            environmentName: 'tst'
            environmentNumber: '03'
            azureDevOpsServiceConnection: '$(azureServiceConnectionTestDev)'
            azureKeyvaultInstance: 'mataerstst03secrets'
            containerRegistry: '$(containerRegistry)'
